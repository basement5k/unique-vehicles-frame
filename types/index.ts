import { z } from 'zod';\n\n// Vehicle submission schema\nexport const vehicleSubmissionSchema = z.object({\n  description: z.string().min(3, 'Description must be at least 3 characters').max(300, 'Description must be less than 300 characters'),\n  vehicleType: z.string().min(2, 'Vehicle type must be at least 2 characters').max(100, 'Vehicle type must be less than 100 characters'),\n  location: z.string().min(2, 'Location must be at least 2 characters').max(100, 'Location must be less than 100 characters'),\n  imageUrl: z.string().url('A valid image URL is required'),\n});\n\nexport type VehicleSubmission = z.infer<typeof vehicleSubmissionSchema>;\n\n// Farcaster Frame message validation schema\nexport const frameMessageSchema = z.object({\n  untrustedData: z.object({\n    fid: z.number(),\n    url: z.string(),\n    messageHash: z.string(),\n    timestamp: z.number(),\n    network: z.number(),\n    buttonIndex: z.number().optional(),\n    inputText: z.string().optional(),\n    state: z.record(z.string()).optional(),\n  }),\n  trustedData: z.object({\n    messageBytes: z.string(),\n  }).optional(),\n});\n\nexport type FrameMessage = z.infer<typeof frameMessageSchema>;\n\n// Session data type\nexport type SessionData = {\n  fid: number;\n  imageUrl?: string;\n  step: 'capture' | 'upload' | 'details' | 'confirm' | 'success';\n  vehicleDetails?: {\n    description?: string;\n    vehicleType?: string;\n    location?: string;\n  };\n  timestamp: number;\n};\n\n// Vehicle types for dropdown options\nexport const vehicleTypes = [\n  'Car',\n  'Motorcycle',\n  'Truck',\n  'Bus',\n  'Van',\n  'SUV',\n  'Bicycle',\n  'Scooter',\n  'Boat',\n  'Aircraft',\n  'Other',\n];